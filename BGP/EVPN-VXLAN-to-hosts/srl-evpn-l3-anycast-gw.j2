{#
 These gNMI YANG updates provision a L2 + (optionally) L3 VNI,
 with anycast gateway on SR Linux

 The configuration differs depending on the evpn.use_symmetric_irb flag:
 * Symmetric ( i.e. originating VTEP performs route lookup and uses L3 VNI )
 * Asymmetric ( i.e. only use L2 VNIs, originating VTEP needs to know final MAC )

 This configuration puts all EVPN VXLAN traffic in the default VRF; some deployments
 may want to use a separate ip-vrf (or multiple) instead.
 A separate VRF is also required for symmetric IRB

#}
{% set overlay_vrf = "default" %}
updates:

{% if evpn.use_symmetric_irb|default(False) %}
{% set l3_vni = max(evpn.vxlan_vnis)+ 1 %}
- path: tunnel-interface[name=vxlan0]/vxlan-interface[index=0]
  val:
   type: routed # L3 VNI
   ingress:
    vni: {{ l3_vni }}
   egress:
    source-ip: use-system-ipv4-address
{% endif %}

{% for vni in evpn.vxlan_vnis %}
# index range is 0..99999999
- path: tunnel-interface[name=vxlan0]/vxlan-interface[index={{vni}}]
  val:
   type: bridged # L2 VNI
   ingress:
    vni: {{ vni }}
   egress:
    source-ip: use-system-ipv4-address

- path: interface[name=irb0]
  val:
   admin-state: enable
   subinterface:
   - index: {{ vni }} # Range: 0..9999
     ipv4:
      address:
      - ip-prefix: 10.{{vni}}.0.{{id+1}}/24
        primary: [null]
      - ip-prefix: 10.{{vni}}.0.1/24
        anycast-gw: True
{%   if evpn.host_route_mobility|default(False) %}
     arp:
      learn-unsolicited: True
      host-route:
       populate:
       - route-type: static
       - route-type: dynamic
      evpn:
       advertise:
       - route-type: static
       - route-type: dynamic
{%   endif %}
     anycast-gw: { }

- path: network-instance[name=overlay-router-l2-{{vni}}]
  val:
   type: mac-vrf
   admin-state: enable
   interface:
   - name: irb0.{{ vni }}
   vxlan-interface:
   - name: vxlan0.{{vni}}
   protocols:
    bgp-evpn:
     bgp-instance:
     - id: 1
       admin-state: enable
       vxlan-interface: vxlan0.{{vni}}
       evi: {{ vni }}
       ecmp: 8
    bgp-vpn:
     bgp-instance:
     - id: 1
{% endfor %}

{# Put all L2 VNIs into single overlay vrf, can be 'default' #}
- path: network-instance[name={{overlay_vrf}}]
  val:
   interface:
{% for vni in evpn.vxlan_vnis %}
   - name: irb0.{{ vni }}
{% endfor %}
{% if evpn.use_symmetric_irb|default(False) and overlay_vrf!='default' %}
   vxlan-interface:
   - name: vxlan0.0
   protocols:
    bgp-evpn:
     bgp-instance:
     - id: 1
       admin-state: enable
       vxlan-interface: vxlan0.0
       evi: {{ l3_vni }}
       ecmp: 8
    bgp-vpn:
     bgp-instance:
     - id: 1
{% endif %}
