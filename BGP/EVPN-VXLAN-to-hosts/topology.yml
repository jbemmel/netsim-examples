# module: [ bgp, evpn, vrf ] # iBGP for EVPN overlay, eBGP as IGP

# plugin: [ ebgp-local_as ]

provider: clab

defaults:
 device: srlinux
 devices:
  srlinux.image: ghcr.io/nokia/srlinux:22.6.3
  # frr.image: frrouting/frr:v8.1.0 # fails
  # frr.clab.binds: frr-daemons:/etc/frr/daemons
 
 #extra_attributes.link: [ bare_metal, lag ]
 #evpn.extra_attributes:
 # global: [ vxlan_vnis, use_symmetric_irb, host_route_mobility, internet_vni ]
 # link: [ esi, multi_homing ]
 #bgp.extra_attributes.node: [ export ]

addressing:
  loopback:
    ipv4: 10.0.0.0/24
  router_id:
    ipv4: 10.0.0.0/24
    prefix: 32
  p2p:
    # ipv4: 10.1.0.0/16
    # prefix: 31 # Change default /30 for interface links
    ipv6: True  # Unnumbered
    ipv4: True

#vrfs:
#  default:
#    vni: 1234 # L3 VNI
#    as: 1
#  internet:
#    vni: 5678
#    as: 2

bgp:
  advertise_loopback: all
  as: 65000 # iBGP AS
  as_list:
    65000: # EVPN overlay with Route Reflectors at spines
      members: [ leaf1a,leaf1b,leaf2a,leaf2b,spine1,spine2,h1,h2,isp ] # added isp
      rr: [ spine1,spine2 ]

    # eBGP underlay is created using bgp.local_as attributes below

  activate: # Address families to activate
    ipv4: [ ebgp ] # Only activate ipv4 over eBGP, use iBGP for EVPN only

#evpn:
#  use_ibgp: True
#  use_symmetric_irb: False
#  host_route_mobility: False
#  vxlan_vnis: [ 100, 200 ]
#  internet_vni: 101 # L3VNI

vrfs:
  internet:
    evpn.transit_vni: True # Use symmetric IRB with RT5 EVPN prefixes

  internal:
    evpn.transit_vni: True # Use symmetric IRB with RT5 EVPN prefixes

vlans:
  internet:
    mode: route
    vrf: internet

  openstack-external:
    mode: irb
    vrf: internet

  openstack-internal:
    mode: irb
    vrf: internal

  storage:
    mode: bridge

# By default, all global vlans are assigned a VNI
# vxlan.vlans: [ internet, openstack-external ]

groups:
  fabric:
    members: [ leaf1a,leaf1b,leaf2a,leaf2b,spine1,spine2 ]
    device: srlinux
    module: [ bgp,evpn,vlan,vrf,vxlan ]

  internet:
    members: [ isp ]
    device: srlinux
    module: [ bgp, evpn, vlan, vrf, vxlan ]  # Border leaf with EVPN
    # module: [ bgp, vlan, vrf ]  # Border gateway with eBGP

  hosts:
    members: [ h1,h2 ]
    device: frr
    module: [ bgp,evpn,vlan,vrf,vxlan ]

nodes:
  leaf1a:
    bgp.local_as: 65001
    # config: [ srl-evpn-l3-anycast-gw.j2, srl-bare-metal-ports.j2 ]
  leaf1b:
    bgp.local_as: 65002
    # config: [ srl-evpn-l3-anycast-gw.j2 ]
  leaf2a:
    bgp.local_as: 65003
    # config: [ srl-evpn-l3-anycast-gw.j2, srl-bare-metal-ports.j2 ]
  leaf2b:
    bgp.local_as: 65004
    # config: [ srl-evpn-l3-anycast-gw.j2 ]

  spine1:
    # device: sros
    clab:
     type: ixrd3
    bgp.local_as: 65010 # Cannot be 65000, AS path will block routes
    bgp.rr_cluster_id: False # Use unique cluster id
    # config: [ srl-spine-allow-own-as-ebgp.j2 ]
  spine2:
    # device: sros
    clab:
     type: ixrd3
    bgp.local_as: 65010
    bgp.rr_cluster_id: False # Use unique cluster id

  isp:
    bgp.local_as: 65100
    # bgp.advertise_loopback: False
    bgp.originate: [ 10.0.0.0/24 ] # For loopback routing

  h1:
    bgp.local_as: 65099 # Same AS only possible with default route to fabric
    # config: [ frr-vxlan-vnis.j2, frr-multipath-relax.j2 ]
  h2:
    bgp.local_as: 65099
    # config: [ frr-vxlan-vnis.j2, frr-multipath-relax.j2 ]

  baremetal1:
    device: linux
  baremetal2:
    device: linux
  baremetal3:  # Multi-homed, all-active with 4 links (to each leaf)
    device: linux

links:

# See https://blog.ipspace.net/2018/06/avoid-summarization-in-leaf-and-spine.html
- spine1:
   bgp.local_as: 65011 # Build eBGP peering between spines
  spine2:
   bgp.local_as: 65012

- leaf1a-spine1
- leaf1a-spine2
- leaf1b-spine1
- leaf1b-spine2
- leaf2a-spine1
- leaf2a-spine2
- leaf2b-spine1
- leaf2b-spine2

- spine1:
  isp:
  # role: external

- spine2:
  isp:
  # role: external

# Stub link for internet
- isp:
    ipv4: 8.8.8.8/32
  type: stub # 'loopback'
  vlan.access: internet
  bgp.advertise: True

# Host dual connected, ECMP VXLAN (routed)
- leaf1a:
  h1:
  vlan.trunk: [ internet, openstack-external, openstack-internal, storage ]

- leaf1b-h1
- leaf2a-h2
- leaf2b-h2

# Bare metal servers single connected, these become 'stub' links due to Linux
- leaf1a:
    vlan.access: openstack-external
  baremetal1:
  #bare_metal: True
- leaf2a:
  baremetal2:
  #bare_metal: True

# 4 multi-homed links
- leaf1a:
  baremetal3:
  #bare_metal: True
  #lag: 1
  #evpn:
  #  esi: "10:00:00:00:00:00:00:00:00:00" # Used for EVPN-MH
  #  multi_homing: "all-active"
- leaf1b:
  baremetal3:
  #bare_metal: True
  #lag: 1
- leaf2a:
  baremetal3:
  #bare_metal: True
  #lag: 1
- leaf2b:
  baremetal3:
  #bare_metal: True
  #lag: 1
