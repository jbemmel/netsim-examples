updates:
{% for l in interfaces if 'service' in l %}
{%  set port_id = l.ifname + ('/1' if 'c' in l.ifname else '') %}
{%  for s1 in l.service if s1.type=="vpls" %}
- path: configure/service/vpls[service-name={{s1.name}}]
  val:
   admin-state: enable
   customer: "1"
   # Note: could set md-auto-id service range
   service-id: {{ s1.id }}
   # service-mtu: {{ 1514 + 32 }}

{%   if 'evpn' in s1 and 'eth_tag' in s1.evpn %}
   bgp:
   - bgp-instance: 1
   bgp-evpn:
    evi: {{ s1.id }}
    mpls:
    - bgp-instance: 1
      admin-state: enable
      ecmp: {{ 2 if 'ixr' in clab.type else 32 }}
      # ingress-replication-bum-label: True # TODO, requires reserved label range
      auto-bind-tunnel:
       resolution: any
       ecmp: {{ 2 if 'ixr' in clab.type else 32 }}
    local-attachment-circuit:
    - name: {{ hostname }}
      eth-tag: {{ s1.evpn.eth_tag }}

{%   elif 'spoke-sdp' in s1 %}
   endpoint:
   - name: ENDPOINT

   spoke-sdp:
   - sdp-bind-id: "{{ l.ifindex }}:{{ s1['spoke-sdp'] }}"
     admin-state: enable
     # Could enable BFD here too...
     endpoint:
      name: ENDPOINT
     stp:
      admin-state: disable

- path: configure/service/sdp[sdp-id={{l.ifindex}}]
  val:
   admin-state: enable
   delivery-type: mpls
   ldp: True
   far-end:
{%    for n in l.neighbors|default([]) if 'system_ip' in n and loop.first %}
    ip-address: "{{ n.system_ip }}"
{%    endfor %}

{%   elif 'sap-id' in s1 %}
   sap:
   - sap-id: "{{ port_id + ((':' + s1['sap-id']|string) if (s1['sap-id'] or s1['sap-id']==0) else '') }}"
     admin-state: enable

- path: configure/port[port-id={{port_id}}]/ethernet
  val:
   # mtu: {{ 1514 + 32 }} # To support MACsec
   mode: access
{%    if (s1['sap-id'] or s1['sap-id']==0) %}
   encap-type: dot1q
{%    endif %}

{%   endif %}
{%  endfor %}
{% endfor %}
