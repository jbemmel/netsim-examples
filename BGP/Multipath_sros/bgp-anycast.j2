{% set anycast_ip="10.0.0.45" %}
{% if ansible_network_os == 'sros' %}
updates:
- path: configure/policy-options/prefix-list[name=anycast_ip]
  val:
   prefix:
    ip-prefix: "{{ anycast_ip }}/32"
    type: exact

- path: configure/policy-options/policy-statement[name=set_anycast_nexthop]
  val:
   entry:
    entry-id: 10
    from:
     prefix-list: ["anycast_ip"]
    action:
     action-type: reject # Anycast IP gets resolved through OSPF
   default-action:
    action-type: accept
    next-hop: {{ anycast_ip }}

- path: configure/router[router-name=Base]/interface[interface-name=anycast_loopback]
  val:
   admin-state: enable
   description: "Anycast nexthop loopback"
   loopback: [null]
   ipv4:
    primary:
     address: "{{ anycast_ip }}"
     prefix-length: 32

{# Add the anycast interface to OSPF #}
- path: configure/router[router-name=Base]/ospf[ospf-instance=0]/area[area-id=0.0.0.0]/interface[interface-name=anycast_loopback]
  val:
   passive: True

replace:
- path: configure/router[router-name=Base]/bgp/group[group-name=ibgp]/export
  val:
   policy: ["set_anycast_nexthop"]
{% elif ansible_network_os == 'srlinux' %}

delete:
- network-instance[name=default]/protocols/bgp

updates:
- path: system/gnmi-server/unix-socket
  val:
   admin-state: enable

- path: network-instance[name=default]/protocols/experimental-frr
  val:
   admin-state: enable
   autonomous-system: {{ bgp.as }}
   router-id: {{ loopback['ipv4']|ipaddr('address') }}
   group:
   - group-name: "ibgp"
     ipv4-unicast:
      admin-state: enable
   neighbor:
   - peer-address: 10.0.0.1
     peer-group: ibgp
   bgp:
    port: 179
    anycast-nexthop: {{ anycast_ip }}

{% endif %}
