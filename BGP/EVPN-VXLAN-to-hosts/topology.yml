## Testing topology for iBGP over eBGP with SR Linux

addressing:
  fabric:
    # unnumbered: true # old style based on loopback IPs
    ipv4: true
    ipv6: true

  routed-vlan:
    ipv4: 192.0.0.0/24
    prefix: 28 # not too small

bgp:
  advertise_loopback: all
  as: 65000 # iBGP AS
  as_list:
    65000: # EVPN overlay with Route Reflectors at spine
      members: [ leaf1,leaf2,spine,frr-bgp-s1,frr-bgp-s2 ]
      rr: [ spine ]
  
  # sessions: # Transport sessions to use, use defaults
  #  ipv4: [ ibgp ] # IBGP-v4 over EBGP-v6
  #  ipv6: [ ebgp ]
  activate: # Address families to activate
    ipv4: [ ebgp ] # Only activate ipv4 over eBGP, use iBGP for EVPN only

provider: clab

groups:
  frr_servers: # TODO: VRF route leaking using route maps on these hosts
    members: [ frr-bgp-s1, frr-bgp-s2 ]
    device: frr
    module: [ bgp,evpn,vlan,vrf,vxlan ]
    node_data:
      vxlan.vlans: [red,blue,green]  # Disable VXLAN for the Internet VLAN on these nodes

  hosts:
    members: [ h1,h2,h3,h4 ]
    device: linux # Some hosts need vlan support, but this sets their static default route correctly

  fabric:
    members: [ spine, leaf1, leaf2 ]
    device: srlinux
    module: [ vlan,vxlan,bgp,evpn,vrf ]

vrfs:
  internet:
    evpn.transit_vni: True # enable symmetric irb
    loopback: True
    # import: [internet,customer1,customer2]
    # export: [internet]

  customer1:
    evpn.transit_vni: True
    # import: [customer2,internet]
    # export: [customer2]
  
  customer2:
    evpn.transit_vni: True
    # import: [customer2,internet]
    # export: [customer2]

vlans:
  red:
    mode: bridge
    vrf: customer1
  blue:
    mode: irb
    vrf: customer2
  green:
    mode: route
    vrf: customer2

  vxlan-underlay:
    # vni: False  # Cannot do this
    mode: route
    prefix:
      ipv4: True
      ipv6: True

  internet:
    mode: irb
    vrf: internet
    gateway:
      default: True

  internet-transit:
    mode: route
    vrf: internet

vxlan.vlans: [ red, blue, green, internet, internet-transit ]

nodes:
  spine:
    bgp.local_as: 65100
    clab:
      type: ixrd3 # 32x100G ports
    # module: [ vxlan,bgp,evpn,vrf ] # Test: remove vlan module
  leaf1:
    bgp.local_as: 65101
  leaf2:
    bgp.local_as: 65102

  frr-bgp-s1:
    bgp.local_as: 65103 # Cannot be same as overlay, else AS loop
  frr-bgp-s2:
    bgp.local_as: 65103 # Same for all hosts -> hosts do not accept specific routes to other hosts unless allow-ownas is set
  h1:
    module: [] # Simple host, no vlans
  h2:
    module: []
  h3:
    module: []
  h4:
    device: frr
    role: host  # To get correct default route
    module: [vlan,vrf] 

links:
- h1:
  leaf1:
    vlan.access: red

- h2:
  frr-bgp-s1:
    vlan.access: red

- h3:
  leaf2:
    vlan.access: blue
- h3:
  frr-bgp-s2:
    vlan.access: green

- h4:
  frr-bgp-s1:
  vlan.trunk: [internet,blue,green]  # First listed vlan with IP becomes default gateway

- frr-bgp-s1:
  leaf1:
  vlan.trunk: [vxlan-underlay,internet]

- frr-bgp-s1:
  leaf2:
  vlan.trunk: [vxlan-underlay,internet]

- frr-bgp-s2:
  leaf1:
  vlan.trunk: [vxlan-underlay, internet]

- frr-bgp-s2:
  leaf2:
  vlan.trunk: [vxlan-underlay, internet]

- spine:
   ipv4: 8.8.8.8/32
  type: stub
  vlan.access: internet-transit

- spine:
  leaf1:
   ifindex: 49
  role: fabric
- spine:
  leaf2:
   ifindex: 49
  role: fabric
