module: [ bgp, vrf ]

provider: clab

plugin: [ peeringdb ]

defaults.device: srlinux

addressing:
  lan:
    ipv6: True

vrfs:
  test:

nodes:
#  AMS-IX: # For valid AS at AMS-IX see https://www.ams-ix.net/ams/connected-networks
#    bgp.as: 65000 # deleted by plugin
#    ixp: True

  DE-CIX: # Multiple locations
    bgp.as: 65001
    ixp: "DE-CIX Frankfurt"
    # ospf.reference_bandwidth: 800000 # Mbps = 800G links

  #
  # RPKI rtr.rpki.cloudflare.com -> 172.65.0.2 or 2606:4700:60::2
  #
  Google:
    bgp.as: 15169 # Google AS
    bgp.originate: [ 8.8.8.0/24, 8.8.4.0/24, 1.2.3.0/24 ] # First two are valid in RPKI, last is not
    device: sros
    # clab.type: sr-1
    # clab.type: sr-1-24d # with 800G
    clab.type: sr-1x-48d
    config: [ rpki ]
    clab.startup-config: |
     /configure cflowd admin-state enable sample-profile 1 sample-rate 10
     /configure cflowd collector 192.168.121.105 port 2055 admin-state enable version 9
     /configure router interface i1/1/c1 cflowd-parameters sampling unicast type interface direction both
     /configure router "management" origin-validation rpki-session 192.168.121.106 description "https://console.rpki-client.org/vrps.json" admin-state enable port 8282
     /configure system management-interface netconf admin-state enable

  Twitter:
    bgp.as: 13414 # Twitter AS
    bgp.originate: [ 104.244.42.0/24, 2001:104:244:42::/64, 64.63.0.0/18 ]
    image: srl/ixp-agent:latest
    clab.srl-agents: [ ../../../srl-ixp-agent/ixp-agent.yml ]
    clab.startup-config: |
     set /system dns server-list [ 8.8.8.8 8.8.4.4 1.1.1.1 ] network-instance mgmt
     set /ixp-agent IXP "DE-CIX Frankfurt" peer-as [ 714 ]

  Apple:
    bgp.as: 714
    bgp.originate: [ 17.17.15.0/24 ] # Based on IRR info
    image: srl/rpki-agent:latest
    clab.srl-agents: [ ../../../srl-rpki-agent/srl-rpki-agent.yml ]
    clab.startup-config: |
     set /acl cpm-filter ipv4-filter entry 261 match protocol tcp destination-port operator eq value 8282 
     set /acl cpm-filter ipv4-filter entry 261 action accept
     set /acl cpm-filter ipv4-filter entry 262 match protocol tcp source-port operator eq value 8282 
     set /acl cpm-filter ipv4-filter entry 262 action accept
     set /network-instance default protocols rpki admin-state enable rpki-server 192.168.121.106

  flow-collector:
    device: linux
    image: netsampler/goflow2:latest
    # clab.cmd: -format csv -format.selector SrcAddr,DstAddr,Etype,Proto,SrcPort,DstPort,TCPFlags

  #
  # It's possible to connect directly to rtr.rpki.cloudflare.com, this offers a
  # local cache in case the public server goes down.
  #
  # In production, one may want to run multiple of these (on different servers)
  # For example, on SR Linux spines
  #
  rpki:
    device: linux
    # image: cloudflare/gortr # older software
    image: rpki/stayrtr # By default uses https://console.rpki-client.org/vrps.json
    # Routinator
    # image: nlnetlabs/routinator
    # clab.cmd: "--verbose server --rtr 0.0.0.0:8282"

links:
- DE-CIX:
  Google:
  Twitter:
    bgp: False  # Let IXP agent do the peering configuration
  Apple:

# Add a direct link with in-vrf peering
# - Google:
#   Twitter:
#     bgp: False
#   vrf: test
