module: [ bgp, evpn ] # iBGP for EVPN overlay, eBGP as IGP

plugin: [ ebgp-local_as ]

provider: clab

defaults:
 device: srlinux
 devices:
  srlinux.image.clab: ghcr.io/nokia/srlinux:21.11.2
  # frr.image.clab: frrouting/frr:v8.1.0 # fails
 extra_attributes.link: [ bare_metal, lag ]
 evpn.extra_attributes:
  global: [ vxlan_vnis, use_symmetric_irb, host_route_mobility, internet_vni ]
  link: [ esi, multi_homing ]
 bgp.extra_attributes.node: [ export ]

addressing:
  loopback:
    ipv4: 10.0.0.0/24
  router_id:
    ipv4: 10.0.0.0/24
    prefix: 32
  p2p:
    ipv4: 10.1.0.0/16
    prefix: 31 # Change default /30 for interface links

bgp:
  advertise_loopback: all
  as: 65000 # iBGP AS
  as_list:
    65000: # EVPN overlay with Route Reflectors at spines
      members: [ leaf1a,leaf1b,leaf2a,leaf2b,spine1,spine2,h1,h2 ]
      rr: [ spine1,spine2 ]

    # eBGP underlay is created using bgp.underlay_as attributes below

evpn:
  use_ibgp: True
  use_symmetric_irb: False
  host_route_mobility: False
  vxlan_vnis: [ 100, 200 ]
  internet_vni: 101 # L3VNI

groups:
  fabric:
    members: [ leaf1a,leaf1b,leaf2a,leaf2b,spine1,spine2 ]
  internet:
    members: [ isp ]
  hosts:
    members: [ h1,h2 ]

nodes:
  leaf1a:
    bgp.underlay_as: 65001
    bgp.export: [ 0.0.0.0/1, 128.0.0.0/1 ]
    config: [ srl-evpn-l3-anycast-gw.j2, srl-bare-metal-ports.j2 ]
  leaf1b:
    bgp.underlay_as: 65002
    bgp.export: [ 0.0.0.0/1, 128.0.0.0/1 ]
    config: [ srl-evpn-l3-anycast-gw.j2 ]
  leaf2a:
    bgp.underlay_as: 65003
    bgp.export: [ 0.0.0.0/1, 128.0.0.0/1 ]
    config: [ srl-evpn-l3-anycast-gw.j2, srl-bare-metal-ports.j2 ]
  leaf2b:
    bgp.underlay_as: 65004
    bgp.export: [ 0.0.0.0/1, 128.0.0.0/1 ]
    config: [ srl-evpn-l3-anycast-gw.j2 ]

  spine1:
    # device: sros
    clab:
     type: ixrd3
    bgp.underlay_as: 65010 # Cannot be 65000, AS path will block routes
    bgp.export: [ 0.0.0.0/1, 128.0.0.0/1 ]
    bgp.rr_cluster_id: False # Use unique cluster id
    # config: [ srl-spine-allow-own-as-ebgp.j2 ]
  spine2:
    # device: sros
    clab:
     type: ixrd3
    bgp.underlay_as: 65010
    bgp.export: [ 0.0.0.0/1, 128.0.0.0/1 ]
    bgp.rr_cluster_id: False # Use unique cluster id

  isp:
    bgp.as: 65100
    bgp.advertise_loopback: False
    bgp.originate: [ 1.1.1.1/32, 8.8.8.8/32, 0.0.0.0/1, 128.0.0.0/1 ]
    module: [ bgp ] # No EVPN here, just eBGP

  h1:
    device: frr
    bgp.underlay_as: 65099 # Same AS only possible with default route to fabric
    config: [ frr-vxlan-vnis.j2, frr-multipath-relax.j2 ]
  h2:
    device: frr
    bgp.underlay_as: 65099
    config: [ frr-vxlan-vnis.j2, frr-multipath-relax.j2 ]

  baremetal1:
    device: linux
  baremetal2:
    device: linux
  baremetal3:  # Multi-homed, all-active with 4 links (to each leaf)
    device: linux

links:

# See https://blog.ipspace.net/2018/06/avoid-summarization-in-leaf-and-spine.html
- spine1:
   bgp.underlay_as: 65011 # Build eBGP peering between spines
  spine2:
   bgp.underlay_as: 65012
  #bgp.underlay_as: # Temporary work-around for missing link_node level attributes
  # spine1: 65011
  # spine2: 65012

- leaf1a-spine1
- leaf1a-spine2
- leaf1b-spine1
- leaf1b-spine2
- leaf2a-spine1
- leaf2a-spine2
- leaf2b-spine1
- leaf2b-spine2

- spine1:
  isp:
  role: external

- spine2:
  isp:
  role: external

# Host dual connected, ECMP VXLAN (routed)
- leaf1a-h1
- leaf1b-h1
- leaf2a-h2
- leaf2b-h2

# Bare metal servers single connected, these become 'stub' links due to Linux
- leaf1a:
  baremetal1:
  bare_metal: True
- leaf2a:
  baremetal2:
  bare_metal: True

# 4 multi-homed links
- leaf1a:
  baremetal3:
  bare_metal: True
  lag: 1
  evpn:
    esi: "10:00:00:00:00:00:00:00:00:00" # Used for EVPN-MH
    multi_homing: "all-active"
- leaf1b:
  baremetal3:
  bare_metal: True
  lag: 1
- leaf2a:
  baremetal3:
  bare_metal: True
  lag: 1
- leaf2b:
  baremetal3:
  bare_metal: True
  lag: 1
